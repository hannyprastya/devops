# IAM User for S3 Access
# This creates an IAM user with programmatic access to the S3 assets bucket

resource "aws_iam_user" "s3_assets_user" {
  name = "hannyprastya-s3-assets-user"
  path = "/service-accounts/"

  tags = {
    Name        = "S3 Assets User"
    Purpose     = "Programmatic access to S3 assets bucket"
    Environment = var.environment
    ManagedBy   = "OpenTofu"
  }
}

# IAM Access Key for the user
resource "aws_iam_access_key" "s3_assets_user_key" {
  user = aws_iam_user.s3_assets_user.name
}

# IAM Policy for S3 Assets Bucket Access
resource "aws_iam_user_policy" "s3_assets_policy" {
  name = "S3AssetsFullAccess"
  user = aws_iam_user.s3_assets_user.name

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Sid    = "ListAllBuckets"
        Effect = "Allow"
        Action = [
          "s3:ListAllMyBuckets",
          "s3:GetBucketLocation"
        ]
        Resource = "*"
      },
      {
        Sid    = "AssetsS3FullAccess"
        Effect = "Allow"
        Action = [
          "s3:ListBucket",
          "s3:GetBucketLocation",
          "s3:GetBucketVersioning"
        ]
        Resource = aws_s3_bucket.assets.arn
      },
      {
        Sid    = "AssetsObjectsFullAccess"
        Effect = "Allow"
        Action = [
          "s3:GetObject",
          "s3:GetObjectVersion",
          "s3:PutObject",
          "s3:DeleteObject",
          "s3:GetObjectAcl",
          "s3:PutObjectAcl"
        ]
        Resource = "${aws_s3_bucket.assets.arn}/*"
      }
    ]
  })
}

# Write credentials to file in sensitive folder
resource "local_sensitive_file" "s3_assets_user_credentials" {
  content = <<EOF
# AWS S3 Credentials
# Generated by OpenTofu on ${timestamp()}
# IAM User: ${aws_iam_user.s3_assets_user.name}

AWS_ACCESS_KEY_ID=${aws_iam_access_key.s3_assets_user_key.id}
AWS_SECRET_ACCESS_KEY=${aws_iam_access_key.s3_assets_user_key.secret}
AWS_DEFAULT_REGION=ap-southeast-3
AWS_BUCKET=hannyprastya.id-assets
EOF

  filename        = "${path.module}/sensitive/s3_user_credentials"
  file_permission = "0600"
}

output "s3_credentials_file" {
  description = "Path to the credentials file"
  value       = local_sensitive_file.s3_assets_user_credentials.filename
}
